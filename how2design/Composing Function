
# 程序就是一系列定义的集合：结构类型定义，数据定义，常量定义，函数定义。（不忘测试）
How to Design Programs explains that programs are collections of definitions: structure type definitions, 
data definitions, constant definitions, and function definitions.And don’t forget tests. 
To guide the division of labor among functions, the section also suggests a rough guideline:
Design one function per task. Formulate auxiliary function definitions for every dependency between quantities in the problem.

This part of the book introduces another guideline on auxiliary functions:
Design one template per data definition. Formulate auxiliary function definitions 
when one data definition points to a second data definition.


If the composition of values requires knowledge of a particular domain of application—for example, 
composing two (computer) images, accounting, music, or science—design an auxiliary function.

If the composition of values requires a case analysis of the available values—for example, depends 
on a number being positive, zero, or negative— use a cond expression. If the cond looks complex, 
design an auxiliary function whose arguments are the template’s expressions and whose body is the cond expression.

If the composition of values must process an element from a self-referential data definition—a list, 
a natural number, or something like those—design an auxiliary function.

If everything fails, you may need to design a more general function and define the main function 
as a specific use of the general function. This suggestion sounds counterintuitive but it is called 
for in a remarkably large number of cases.

# 维护一个待实现函数清单
Wish List
Maintain a list of function headers that must be designed to complete a program. 
Writing down complete function headers ensures that you can test those portions of the programs 
that you have finished, which is useful even though many tests will fail. Of course, 
when the wish list is empty, all tests should pass and all functions should be covered by tests.

# 这个函数是否已经由他人实现？（内置操作和库函数）
Before you put a function on the wish list, you should check whether something like the function already exists 
in your language’s library or whether something similar is already on the wish list. BSL, BSL+, and indeed all 
programming languages provide many built-in operations and many library functions. You should explore your chosen language 
when you have time and when you have a need, so that you know what it provides.
