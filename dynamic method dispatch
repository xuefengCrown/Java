# 动态方法调度
一种在运行时而不是编译时调用重载方法的机制
它是多态性的基础
而多态是面向对象编程的本质。

超类的引用变量可以引用子类对象。
当一个重载方法通过超类引用被调用，java根据被引用对象的类型来决定执行哪个版本的方法。

为什么要重载方法？
重载方法允许Java支持运行时多态性。多态性是面向对象编程的本质，
原因如下：它允许通用类制定方法，这些方法对该类的所以派生类都是公用的。
同时该方法允许子类定义这些方法中的某些或全部特殊实现。
重载方法是java实现它的多态性——“一个接口，多个方法”的另一种方式。
